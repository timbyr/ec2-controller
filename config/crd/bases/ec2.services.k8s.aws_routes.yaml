
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: routes.ec2.services.k8s.aws
spec:
  group: ec2.services.k8s.aws
  names:
    kind: Route
    listKind: RouteList
    plural: routes
    singular: route
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Route is the Schema for the Routes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: "RouteSpec defines the desired state of Route. \n Describes
              a route in a route table."
            properties:
              carrierGatewayID:
                description: "The ID of the carrier gateway. \n You can only use this
                  option when the VPC contains a subnet which is associated with a
                  Wavelength Zone."
                type: string
              destinationCIDRBlock:
                description: The IPv4 CIDR address block used for the destination
                  match. Routing decisions are based on the most specific match. We
                  modify the specified CIDR block to its canonical form; for example,
                  if you specify 100.68.0.18/18, we modify it to 100.68.0.0/18.
                type: string
              destinationIPv6CIDRBlock:
                description: The IPv6 CIDR block used for the destination match. Routing
                  decisions are based on the most specific match.
                type: string
              destinationPrefixListID:
                description: The ID of a prefix list used for the destination match.
                type: string
              egressOnlyInternetGatewayID:
                description: '[IPv6 traffic only] The ID of an egress-only internet
                  gateway.'
                type: string
              gatewayID:
                description: The ID of an internet gateway or virtual private gateway
                  attached to your VPC.
                type: string
              instanceID:
                description: The ID of a NAT instance in your VPC. The operation fails
                  if you specify an instance ID unless exactly one network interface
                  is attached.
                type: string
              localGatewayID:
                description: The ID of the local gateway.
                type: string
              natGatewayID:
                description: '[IPv4 traffic only] The ID of a NAT gateway.'
                type: string
              networkInterfaceID:
                description: The ID of a network interface.
                type: string
              transitGatewayID:
                description: The ID of a transit gateway.
                type: string
              vpcEndpointID:
                description: The ID of a VPC endpoint. Supported for Gateway Load
                  Balancer endpoints only.
                type: string
              vpcPeeringConnectionID:
                description: The ID of a VPC peering connection.
                type: string
            type: object
          status:
            description: RouteStatus defines the observed state of Route
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                required:
                - ownerAccountID
                type: object
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              return_:
                description: Returns true if the request succeeds; otherwise, it returns
                  an error.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
